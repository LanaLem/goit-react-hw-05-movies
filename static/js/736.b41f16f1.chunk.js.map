{"version":3,"file":"static/js/736.b41f16f1.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","servises/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n  display: block;\n  width: 100%;\n\n  border-radius: ${p => p.theme.radii.normal};\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 200px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadow.black};\n\n  transition-property: transform;\n  transition-timing-function: linear;\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Ul = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(6, 0fr);\n  gap: 1em;\n  justify-content: center;\n  padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const H3 = styled.h3`\n  text-align: center;\n  background-color: ${p => p.theme.colors.darkRed};\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const Span = styled.span`\n  color: ${p => p.theme.colors.darkRed};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-shadow: ${p => p.theme.shadow.black};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../../servises/api';\nimport { Box } from '../../constants/Box';\nimport Template from '../../constants/TemplateActor.webp';\nimport * as SC from './Cast.styled';\nimport { toast } from 'react-toastify';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState('');\n  const [crew, setCrew] = useState('');\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(data => {\n        setCast(data.data.cast);\n        setCrew(data.data.crew);\n      })\n      .catch(error => {\n        toast(error);\n      });\n  }, [movieId]);\n\n  if (!cast || !crew) return;\n\n  return (\n    <>\n      <div>\n        <SC.H3>Cast:</SC.H3>\n        {cast.length <= 0 && <p>Sorry, there are no info :(</p>}\n        <SC.Ul>\n          {cast.map(({ credit_id, name, character, profile_path }) => {\n            return (\n              <SC.Li key={credit_id}>\n                <SC.Img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : Template\n                  }\n                  alt={name}\n                />\n                <Box p={2}>\n                  <p>\n                    <SC.Span>Actor: </SC.Span>\n                    {name}\n                  </p>\n                  <p>\n                    <SC.Span>Character: </SC.Span>\n                    {character}\n                  </p>\n                </Box>\n              </SC.Li>\n            );\n          })}\n        </SC.Ul>\n      </div>\n\n      <div>\n        <SC.H3>Crew:</SC.H3>\n        {crew.length <= 0 && <p>Sorry, there are no info :(</p>}\n        <SC.Ul>\n          {crew.map(({ credit_id, name, job, profile_path }) => {\n            return (\n              <SC.Li key={credit_id}>\n                <SC.Img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : Template\n                  }\n                  alt={name}\n                />\n                <p>\n                  <SC.Span>{job}</SC.Span>: {name}\n                </p>\n              </SC.Li>\n            );\n          })}\n        </SC.Ul>\n      </div>\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c01f14dcdb58e9cec669b1017a4d540c';\n\naxios.defaults.baseURL = URL;\n\nexport const getMovies = (page) =>\n    axios.get(`/trending/movie/week?api_key=${API_KEY}&page=${page}`);\n\nexport const getSearch = (search, page) =>\n    axios.get(`/search/movie?api_key=${API_KEY}&page=${page}&query=${search}`)\n\nexport const getOneMovie = (movieID) =>\n    axios.get(`/movie/${movieID}?api_key=${API_KEY}`);\n\nexport const getCast = (movieID) =>\n    axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n\nexport const getReview = (movieID, page) =>\n    axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}&page=${page}`);\n"],"names":["Img","styled","p","theme","radii","normal","Li","shadow","black","Ul","space","H3","colors","darkRed","white","Span","fontWeights","bold","movieId","useParams","useState","cast","setCast","crew","setCrew","useEffect","getCast","then","data","catch","error","toast","length","map","credit_id","name","character","profile_path","src","Template","alt","Box","job","API_KEY","axios","getMovies","page","getSearch","search","getOneMovie","movieID","getReview"],"sourceRoot":""}