{"version":3,"file":"static/js/544.f8fee48d.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/GalleryItem/GalleryItem.styled.jsx","components/GalleryItem/GalleryItem.jsx","components/Gallery/Gallery.styled.jsx","components/Gallery/Gallery.jsx","helpers/cleanedArray .js","pages/Home/Home.jsx","servises/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: none;\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.darkRed};\n  box-shadow: ${p => p.theme.shadow.black};\n  cursor: pointer;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-shadow: ${p => p.theme.shadow.black};\n\n  transition-property: transform;\n  transition-timing-function: linear;\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n","import { PropTypes } from 'prop-types';\nimport * as SC from './Button.styled';\n\nexport const Button = ({ func, text, type }) => {\n  return (\n    <SC.Button type={type} onClick={func}>\n      {text}\n    </SC.Button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  func: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.darkRed};\n`;\n\nexport const H2 = styled.h2`\n  height: 36px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.16;\n  text-transform: uppercase;\n  text-align: center;\n\n  text-shadow: ${p => p.theme.shadow.redText};\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 396px;\n  object-fit: cover;\n  border-radius: ${p => p.theme.radii.normal};\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const P = styled.p`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-shadow: ${p => p.theme.shadow.black};\n  text-align: center;\n`;\n\nexport const TextSpan = styled.span`\n  color: ${p => p.theme.colors.darkRed};\n`;\n\nexport const VoteSpan = styled.span`\n  color: ${p => p.theme.colors.red};\n`;\n\nexport const Button = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  margin-right: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: none;\n  background-color: transparent;\n  box-shadow: ${p => p.theme.shadow.black};\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.darkRed};\n  text-shadow: ${p => p.theme.shadow.black};\n\n  cursor: pointer;\n\n  transition-property: transform;\n  transition-timing-function: linear;\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    box-shadow: ${p => p.theme.shadow.redText};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport Template from '../../constants/TemplateFilm.jpg';\nimport * as SC from './GalleryItem.styled';\n\nexport const GalleryItem = ({ title, poster, vote, id }) => {\n  const location = useLocation();\n\n  return (\n    <SC.StyledLink id={id} to={`/movies/${id}`} state={{ from: location }}>\n      <SC.H2>{title}</SC.H2>\n      <SC.Image\n        src={poster ? `https://image.tmdb.org/t/p/w500${poster}` : Template}\n        alt={title}\n      />\n      <SC.P>\n        <SC.TextSpan>Votes: </SC.TextSpan>\n        <SC.VoteSpan>{Number(vote).toFixed(1)}</SC.VoteSpan>\n      </SC.P>\n    </SC.StyledLink>\n  );\n};\n\nexport default GalleryItem;\n\nGalleryItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n  vote: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: grid;\n  align-items: center;\n  gap: 1em;\n  padding: ${p => p.theme.space[4]}px;\n  grid-template-columns: repeat(4, 1fr);\n`;\n\nexport const Li = styled.li`\n  padding: ${p => p.theme.space[3]}px;\n  width: 280px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadow.black};\n  cursor: pointer;\n\n  transition-property: transform;\n  transition-timing-function: linear;\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.01);\n    box-shadow: ${p => p.theme.shadow.red};\n  }\n`;","import GalleryItem from '../GalleryItem/GalleryItem';\nimport * as SC from './Gallery.styled';\nimport PropTypes from 'prop-types';\n\nexport const Gallery = ({ array }) => {\n  return (\n    <SC.Ul>\n      {array.map(({ title, poster, vote, id }) => {\n        return (\n          <SC.Li key={id}>\n            <GalleryItem id={id} title={title} poster={poster} vote={vote} />\n          </SC.Li>\n        );\n      })}\n    </SC.Ul>\n  );\n};\n\nexport default Gallery;\n\nGallery.propTypes = {\n  array: PropTypes.arrayOf(\n    PropTypes.exact({\n      title: PropTypes.string.isRequired,\n      poster: PropTypes.string,\n      vote: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","export const cleanedArray = (movies) =>\n    movies.map(({ title, poster_path: poster, vote_average: vote, id }) => ({\n        title,\n        poster,\n        vote,\n        id,\n    })\n    );\n\n","import { useState, useEffect } from 'react';\nimport { getMovies } from '../../servises/api';\nimport { cleanedArray } from '../../helpers/cleanedArray ';\nimport { Box } from '../../constants/Box';\nimport Button from '../../components/Button/Button';\nimport Gallery from '../../components/Gallery/Gallery';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    const fetchMovies = page => {\n      getMovies(page)\n        .then(data => {\n          setStatus(Status.PENDING);\n          const totalPages = data.data.total_pages;\n          if (totalPages < page) return setStatus(Status.REJECTED);\n\n          setMovies(prevState => [\n            ...prevState,\n            ...cleanedArray(data.data.results),\n          ]);\n          setStatus(Status.RESOLVED);\n        })\n        .catch(error => {\n          toast(error);\n        });\n    };\n\n    fetchMovies(page);\n  }, [page]);\n\n  const handleIncrementPage = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  if (!movies) return;\n\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        p={4}\n      >\n        {status === Status.PENDING && <Loader />}\n        <Gallery array={movies} />\n        {status === Status.RESOLVED && movies.length % 20 === 0 && (\n          <Button func={handleIncrementPage} text=\"Load more\" type=\"button\" />\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c01f14dcdb58e9cec669b1017a4d540c';\n\naxios.defaults.baseURL = URL;\n\nexport const getMovies = (page) =>\n    axios.get(`/trending/movie/week?api_key=${API_KEY}&page=${page}`);\n\nexport const getSearch = (search, page) =>\n    axios.get(`/search/movie?api_key=${API_KEY}&page=${page}&query=${search}`)\n\nexport const getOneMovie = (movieID) =>\n    axios.get(`/movie/${movieID}?api_key=${API_KEY}`);\n\nexport const getCast = (movieID) =>\n    axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}`);\n\nexport const getReview = (movieID, page) =>\n    axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}&page=${page}`);\n"],"names":["Button","styled","p","theme","space","radii","normal","colors","white","darkRed","shadow","black","fontWeights","bold","func","text","type","onClick","StyledLink","Link","H2","fontSizes","s","redText","Image","P","TextSpan","VoteSpan","red","title","poster","vote","id","location","useLocation","to","state","from","src","Template","alt","Number","toFixed","Ul","Li","array","map","cleanedArray","movies","poster_path","vote_average","Status","useState","setMovies","page","setPage","status","setStatus","useEffect","getMovies","then","data","total_pages","prevState","results","catch","error","toast","fetchMovies","display","justifyContent","alignItems","flexDirection","length","API_KEY","axios","getSearch","search","getOneMovie","movieID","getCast","getReview"],"sourceRoot":""}